[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[ext_resource path="res://ndh-assets/UI/HUD/timewheel/timewheel_mask.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
const float M_PI = 3.1415926535897932384626433832795;
uniform sampler2D mask;
uniform float uv_rotation = 0.0;
uniform bool enabled = true;

// Rotate a UV with a certain degree in radians.
vec2 rotateUV(vec2 uv, vec2 pivot, float rotation) {
    float cosa = cos(rotation);
    float sina = sin(rotation);
    uv -= pivot;
    return vec2(
        cosa * uv.x - sina * uv.y,
        cosa * uv.y + sina * uv.x 
    ) + pivot;
}

void fragment(){
	if (enabled) 
	{
  		COLOR = texture(TEXTURE, rotateUV(UV, vec2(0.5), uv_rotation / 180.0 * M_PI));
  		COLOR.a = 1.0 - texture(mask, UV ).a;
	}
	else
	{
		COLOR = texture(TEXTURE, UV)
	}
} "

[resource]
shader = SubResource( 1 )
shader_param/uv_rotation = 180.0
shader_param/enabled = true
shader_param/mask = ExtResource( 1 )
